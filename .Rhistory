?LaplacianEigenmaps
LE_Combined <- LaplacianEigenmaps(CollapsedDummyCodedCombinedData_dimRed,
ndim = 2,
sparse = "knn",
knn = 50,
eps = 0.1,
t = Inf,
norm = FALSE)
##Laplacian Eigenmaps
CollapsedDummyCodedCombinedData_dimRed <- dimRedData(CollapsedDummyCodedCombinedData[,1:ncol(CollapsedDummyCodedCombinedData)])
LE_Combined <- LaplacianEigenmaps(CollapsedDummyCodedCombinedData_dimRed,
ndim = 2,
sparse = "knn",
knn = 50,
eps = 0.1,
t = Inf,
norm = FALSE)
leim@stdpars
pars <- leim@stdpars
View(pars)
leim@pars_2 <- list(ndim = 2,
sparse = "knn",
knn = 50,
eps = 0.1,
t = Inf,
norm = FALSE)
pars_2 <- list(ndim = 2,
sparse = "knn",
knn = 50,
eps = 0.1,
t = Inf,
norm = FALSE)
rm(pars_)
rm(pars)
slot(leim, "pars_2")
getSlots("leim")
getSlots(leim)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, pars_2)
plot(LE_Combined@data@data)
View(LE_Combined)
##Laplacian Eigenmaps
CollapsedDummyCodedCombinedData_dimRed <- dimRedData(CollapsedDummyCodedCombinedData[,1:ncol(CollapsedDummyCodedCombinedData)]) #Convert to dimRed class
leim <- LaplacianEigenmaps() #S4 Object for LE
LEpars <- list(ndim = 2, #Define Parameter Set for LE
sparse = "knn",
knn = 50,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
colnames(MDS_NonMetric_Combined_Points) <- c("x","y","TaxaID")
View(LE_Combined_Points)
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_OuterJoin_DummyCoded_TaxaID_Collapsed_LE-2.csv")
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = 50,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
colnames(MDS_NonMetric_Combined_Points) <- c("x","y","z","TaxaID")
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_OuterJoin_DummyCoded_TaxaID_Collapsed_LE-3.csv")
CollapsedDummyCodedCombinedData <- as.data.frame(read_csv("datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_TaxaID_Collapsed.csv"))
rownames(CollapsedDummyCodedCombinedData) <- CollapsedDummyCodedCombinedData$TaxaID
CollapsedDummyCodedCombinedData$TaxaID <- NULL
CollapsedDummyCodedCombinedData$GuthrieZone <- NULL
CollapsedDummyCodedCombinedData$CulturalTaxa <- NULL
CollapsedDummyCodedCombinedData$mtDNATaxa <- NULL
CollapsedDummyCodedCombinedData$YchrTaxa <- NULL
##Laplacian Eigenmaps
CollapsedDummyCodedCombinedData_dimRed <- dimRedData(CollapsedDummyCodedCombinedData[,1:ncol(CollapsedDummyCodedCombinedData)]) #Convert to dimRed class
leim <- LaplacianEigenmaps() #S4 Object for LE
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = 50,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = 10,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = 16,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = n(rownames(CollapsedDummyCodedCombinedData)),
eps = 0.1,
t = Inf,
norm = FALSE)
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = 16,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = 15,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "eps",
knn = 15,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = 15,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_TaxaID_Collapsed_LE-3.csv")
LEpars <- list(ndim = 2, #Define Parameter Set for LE
sparse = "knn",
knn = 15,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_TaxaID_Collapsed_LE-3.csv")
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = 15,
eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_TaxaID_Collapsed_LE-3.csv")
LEpars <- list(ndim = 2, #Define Parameter Set for LE
sparse = "knn",
knn = 15,
#eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
?knn
knn(CollapsedDummyCodedCombinedData,CollapsedDummyData,rownames(CollapsedDummyCodedCombinedData),k=2)
igraph::knn
igraph::knn(CollapsedDummyCodedCombinedData,CollapsedDummyData,rownames(CollapsedDummyCodedCombinedData),k=2)
class::knn(CollapsedDummyCodedCombinedData,CollapsedDummyData,rownames(CollapsedDummyCodedCombinedData),k=2)
class::knn(CollapsedDummyCodedCombinedData,CollapsedDummyCodedCombinedData,rownames(CollapsedDummyCodedCombinedData),k=2)
knn_2 <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_2
prop.table(table(knn_2, rownames(CollapsedDummyCodedCombinedData)))
knn_2_prop <- prop.table(table(knn_2, rownames(CollapsedDummyCodedCombinedData)))
sum(diag(knn_2_prop))/sum(knn_2_prop)
knn_3 <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=3)
knn_3_prop <- prop.table(table(knn_2, rownames(CollapsedDummyCodedCombinedData)))
sum(diag(knn_3_prop))/sum(knn_3_prop)
knn_3 <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=3)
knn_3_prop <- prop.table(table(knn_3, rownames(CollapsedDummyCodedCombinedData)))
sum(diag(knn_3_prop))/sum(knn_3_prop)
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knnprop)
print(k,"- Accuracy: ",accuracy)
}
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knn_prop)
print(k,"- Accuracy: ",accuracy)
}
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knn_prop)
paste0(k,"- Accuracy: ",accuracy)
}
#Find optimal number of k in k-nn
knn_accuracy <- data.frame(k = 0,
accuracy = 0)
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knn_prop)
iter_accuracy <- data.frame(k = k,
accuracy = accuracy)
cbind(knn_accuracy, iter_accuracy)
}
View(knn_accuracy)
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knn_prop)
iter_accuracy <- data.frame(k = k,
accuracy = accuracy)
cbind(iter_accuracy, knn_accuracy)
}
View(knn_accuracy)
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knn_prop)
iter_accuracy <- data.frame(k = k,
accuracy = accuracy)
rbind(iter_accuracy, knn_accuracy)
}
View(knn_accuracy)
?rbind
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knn_prop)
iter_accuracy <- data.frame(k = k,
accuracy = accuracy)
knn_accuracy <- rbind(iter_accuracy, knn_accuracy)
}
View(knn_accuracy)
most_accurate_k <-
which(max(knn_accuracy$accuracy))
most_accurate_k <-
which.max(knn_accuracy$accuracy)
most_accurate_k <- knn_accuracy[which.max(knn_accuracy$accuracy),]
View(most_accurate_k)
most_accurate_k <- knn_accuracy[which.max(knn_accuracy$accuracy),]$k
CollapsedDummyCodedCombinedData_dimRed <- dimRedData(CollapsedDummyCodedCombinedData[,1:ncol(CollapsedDummyCodedCombinedData)]) #Convert to dimRed class
leim <- LaplacianEigenmaps() #S4 Object for LE
LEpars <- list(ndim = 2, #Define Parameter Set for LE
sparse = "knn",
knn = most_accurate_k,
#eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
View(LE_Combined)
View(LE_Combined_Points)
CollapsedDummyCodedCombinedData <- as.data.frame(read_csv("datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_TaxaID_Collapsed.csv"))
rownames(CollapsedDummyCodedCombinedData) <- CollapsedDummyCodedCombinedData$TaxaID
CollapsedDummyCodedCombinedData$TaxaID <- NULL
CollapsedDummyCodedCombinedData$GuthrieZone <- NULL
CollapsedDummyCodedCombinedData$CulturalTaxa <- NULL
CollapsedDummyCodedCombinedData$mtDNATaxa <- NULL
CollapsedDummyCodedCombinedData$YchrTaxa <- NULL
#Find optimal number of k in k-nn
knn_accuracy <- data.frame(k = 0,
accuracy = 0)
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knn_prop)
iter_accuracy <- data.frame(k = k,
accuracy = accuracy)
knn_accuracy <- rbind(iter_accuracy, knn_accuracy)
}
most_accurate_k <- knn_accuracy[which.max(knn_accuracy$accuracy),]$k
CollapsedDummyCodedCombinedData_dimRed <- dimRedData(CollapsedDummyCodedCombinedData[,1:ncol(CollapsedDummyCodedCombinedData)]) #Convert to dimRed class
leim <- LaplacianEigenmaps() #S4 Object for LE
LEpars <- list(ndim = 2, #Define Parameter Set for LE
sparse = "knn",
knn = most_accurate_k,
#eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_TaxaID_Collapsed_LE-2.csv",
append = FALSE)
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = most_accurate_k,
#eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_TaxaID_Collapsed_LE-3.csv",
append = FALSE)
CollapsedDummyCodedCombinedData <- as.data.frame(read_csv("datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_GuthrieZone_Collapsed.csv"))
rownames(CollapsedDummyCodedCombinedData) <- CollapsedDummyCodedCombinedData$GuthrieZone
CollapsedDummyCodedCombinedData$TaxaID <- NULL
CollapsedDummyCodedCombinedData$GuthrieZone <- NULL
CollapsedDummyCodedCombinedData$CulturalTaxa <- NULL
CollapsedDummyCodedCombinedData$mtDNATaxa <- NULL
CollapsedDummyCodedCombinedData$YchrTaxa <- NULL
#Find optimal number of k in k-nn
knn_accuracy <- data.frame(k = 0,
accuracy = 0)
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knn_prop)
iter_accuracy <- data.frame(k = k,
accuracy = accuracy)
knn_accuracy <- rbind(iter_accuracy, knn_accuracy)
}
most_accurate_k <- knn_accuracy[which.max(knn_accuracy$accuracy),]$k
CollapsedDummyCodedCombinedData_dimRed <- dimRedData(CollapsedDummyCodedCombinedData[,1:ncol(CollapsedDummyCodedCombinedData)]) #Convert to dimRed class
leim <- LaplacianEigenmaps() #S4 Object for LE
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = most_accurate_k,
#eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_GuthrieZone_Collapsed_LE-3.csv",
append = FALSE)
LEpars <- list(ndim = 2, #Define Parameter Set for LE
sparse = "knn",
knn = most_accurate_k,
#eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_GuthrieZone_Collapsed_LE-3.csv",
append = FALSE)
CollapsedDummyCodedCombinedData <- as.data.frame(read_csv("datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_OuterJoin_DummyCoded_GuthrieZone_Collapsed.csv"))
rownames(CollapsedDummyCodedCombinedData) <- CollapsedDummyCodedCombinedData$GuthrieZone
CollapsedDummyCodedCombinedData$TaxaID <- NULL
CollapsedDummyCodedCombinedData$GuthrieZone <- NULL
CollapsedDummyCodedCombinedData$CulturalTaxa <- NULL
CollapsedDummyCodedCombinedData$mtDNATaxa <- NULL
CollapsedDummyCodedCombinedData$YchrTaxa <- NULL
#Find optimal number of k in k-nn
knn_accuracy <- data.frame(k = 0,
accuracy = 0)
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knn_prop)
iter_accuracy <- data.frame(k = k,
accuracy = accuracy)
knn_accuracy <- rbind(iter_accuracy, knn_accuracy)
}
most_accurate_k <- knn_accuracy[which.max(knn_accuracy$accuracy),]$k
CollapsedDummyCodedCombinedData_dimRed <- dimRedData(CollapsedDummyCodedCombinedData[,1:ncol(CollapsedDummyCodedCombinedData)]) #Convert to dimRed class
leim <- LaplacianEigenmaps() #S4 Object for LE
LEpars <- list(ndim = 2, #Define Parameter Set for LE
sparse = "knn",
knn = most_accurate_k,
#eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_OuterJoin_DummyCoded_GuthrieZone_Collapsed_LE-2.csv",
append = FALSE)
CollapsedDummyCodedCombinedData_dimRed <- dimRedData(CollapsedDummyCodedCombinedData[,1:ncol(CollapsedDummyCodedCombinedData)]) #Convert to dimRed class
leim <- LaplacianEigenmaps() #S4 Object for LE
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = most_accurate_k,
#eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_OuterJoin_DummyCoded_GuthrieZone_Collapsed_LE-3.csv",
append = FALSE)
CollapsedDummyCodedCombinedData <- as.data.frame(read_csv("datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_GuthrieZone_Collapsed.csv"))
rownames(CollapsedDummyCodedCombinedData) <- CollapsedDummyCodedCombinedData$GuthrieZone
CollapsedDummyCodedCombinedData$TaxaID <- NULL
CollapsedDummyCodedCombinedData$GuthrieZone <- NULL
CollapsedDummyCodedCombinedData$CulturalTaxa <- NULL
CollapsedDummyCodedCombinedData$mtDNATaxa <- NULL
CollapsedDummyCodedCombinedData$YchrTaxa <- NULL
#Find optimal number of k in k-nn
knn_accuracy <- data.frame(k = 0,
accuracy = 0)
for (k in 1:nrow(CollapsedDummyCodedCombinedData)){
knn <- class::knn(CollapsedDummyCodedCombinedData,
CollapsedDummyCodedCombinedData,
rownames(CollapsedDummyCodedCombinedData),
k=2)
knn_prop <- prop.table(table(knn, rownames(CollapsedDummyCodedCombinedData)))
accuracy <- sum(diag(knn_prop))/sum(knn_prop)
iter_accuracy <- data.frame(k = k,
accuracy = accuracy)
knn_accuracy <- rbind(iter_accuracy, knn_accuracy)
}
most_accurate_k <- knn_accuracy[which.max(knn_accuracy$accuracy),]$k
CollapsedDummyCodedCombinedData_dimRed <- dimRedData(CollapsedDummyCodedCombinedData[,1:ncol(CollapsedDummyCodedCombinedData)]) #Convert to dimRed class
leim <- LaplacianEigenmaps() #S4 Object for LE
LEpars <- list(ndim = 2, #Define Parameter Set for LE
sparse = "knn",
knn = most_accurate_k,
#eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_GuthrieZone_Collapsed_LE-2.csv",
append = FALSE)
LEpars <- list(ndim = 3, #Define Parameter Set for LE
sparse = "knn",
knn = most_accurate_k,
#eps = 0.1,
t = Inf,
norm = FALSE)
LE_Combined <- leim@fun(CollapsedDummyCodedCombinedData_dimRed, LEpars)
LE_Combined_Points <- as.data.frame(LE_Combined@data@data) #Extract Points
LE_Combined_Points$TaxaID <- rownames(CollapsedDummyCodedCombinedData) #Add Column and Rename
write_csv(LE_Combined_Points,
"datasets/DimensionalityReduction/DimensionalityReduction_CombinedData_InnerJoin_DummyCoded_GuthrieZone_Collapsed_LE-3.csv",
append = FALSE)
library(ape)
## Illustration of binaryPGLMM() with simulated data
# Generate random phylogeny
n <- 100
phy <- compute.brlen(rtree(n=n), method = "Grafen", power = 1)
# Generate random data and standardize to have mean 0 and variance 1
X1 <- rTraitCont(phy, model = "BM", sigma = 1)
X1 <- (X1 - mean(X1))/var(X1)
# Simulate binary Y
sim.dat <- data.frame(Y=array(0, dim=n), X1=X1, row.names=phy$tip.label)
sim.dat$Y <- binaryPGLMM.sim(Y ~ X1, phy=phy, data=sim.dat, s2=.5,
B=matrix(c(0,.25),nrow=2,ncol=1), nrep=1)$Y
# Fit model
binaryPGLMM(Y ~ X1, phy=phy, data=sim.dat)
View(phy)
?compute.brlen
rtree(n=10)
?separate
library(tidyr)
library(readr)
library(dplyr)
library(purrr)
?separate
seq(1:2)
